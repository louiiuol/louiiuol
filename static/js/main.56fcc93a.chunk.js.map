{"version":3,"sources":["assets/icons lazy /^/.//.*/.svg$/ groupOptions: {} namespace object","app/components/views/home/IntroWriter.tsx","app/components/shared/Svg.tsx","app/components/views/home/Home.tsx","app/components/shared/Header.tsx","app/components/views/presentation/introduction/Socials.tsx","app/components/shared/Img.tsx","app/components/views/presentation/introduction/Introduction.tsx","app/components/views/presentation/experience/experience.tsx","app/components/views/presentation/experience/ExperienceTable.tsx","app/components/views/presentation/skills/Skill.tsx","app/components/views/presentation/skills/SkillsBoard.tsx","app/components/views/presentation/Presentation.tsx","app/components/views/works/Player.tsx","app/components/views/works/Videos.tsx","app/components/views/works/WorkDetail.tsx","app/components/views/works/WorksPlatform.tsx","app/App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","IntroWriter","avgTypingDelay","startDelay","Backspace","count","delay","Delay","ms","Svg","props","IconWrapper","icon","className","size","extra","src","file","ImportedIconRef","useRef","useState","loading","setLoading","useEffect","a","name","namedImport","default","current","console","error","importIcon","ImportedIcon","styles","Home","Header","to","activeClassName","href","Socials","target","Img","el","alt","process","type","Introduction","Experience","key","xp","date","end","start","title","location","establishment","city","description","actions","action","index","keyword","ExperienceTable","experiences","sort","next","Skill","skill","value","level","certified","pro","SkillsBoard","categories","category","skills","Presentation","Player","selected","Videos","feed","videos","setSelected","video","onClick","cover","WorkDetail","WorksPlatform","document","querySelectorAll","forEach","quarter","querySelector","addEventListener","classList","add","remove","setFullScreen","toggleQuarters","App","basename","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"gjTAAA,IAAIA,EAAM,CACT,qBAAsB,CACrB,GACA,GAED,uBAAwB,CACvB,GACA,GAED,qBAAsB,CACrB,GACA,GAED,uBAAwB,CACvB,GACA,GAED,uBAAwB,CACvB,GACA,GAED,wBAAyB,CACxB,GACA,GAED,uBAAwB,CACvB,GACA,GAED,sBAAuB,CACtB,GACA,IAED,uBAAwB,CACvB,GACA,IAED,yBAA0B,CACzB,GACA,IAED,oBAAqB,CACpB,GACA,IAED,oBAAqB,CACpB,GACA,IAED,0BAA2B,CAC1B,GACA,IAED,sBAAuB,CACtB,GACA,IAED,sBAAuB,CACtB,GACA,IAED,mBAAoB,CACnB,GACA,IAED,qBAAsB,CACrB,GACA,IAED,oBAAqB,CACpB,GACA,IAED,sBAAuB,CACtB,GACA,IAED,wBAAyB,CACxB,GACA,IAED,sBAAuB,CACtB,GACA,IAED,0BAA2B,CAC1B,GACA,IAED,qBAAsB,CACrB,GACA,IAED,yBAA0B,CACzB,GACA,IAED,wBAAyB,CACxB,GACA,IAED,yBAA0B,CACzB,GACA,IAED,uBAAwB,CACvB,GACA,IAED,yBAA0B,CACzB,GACA,IAED,qBAAsB,CACrB,GACA,IAED,wBAAyB,CACxB,GACA,IAED,qBAAsB,CACrB,GACA,IAED,iBAAkB,CACjB,GACA,IAED,eAAgB,CACf,GACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOJ,EAAoBU,EAAED,EAAI,MAGnCX,EAAoBa,KAAO,WAC1B,OAAOC,OAAOD,KAAKd,IAEpBC,EAAoBW,GAAK,GACzBI,EAAOC,QAAUhB,G,mHCnICiB,EAlBE,WAEhB,OACI,wBAAIN,GAAG,eACH,kBAAC,IAAD,CAAQO,eAAgB,GAAIC,WAAY,GAAxC,cAEI,kBAAC,IAAOC,UAAR,CAAkBC,MAAO,GAAIC,MAAO,OAAQ,kBAAC,IAAOC,MAAR,CAAcC,GAAI,MAFlE,8BAII,kBAAC,IAAOJ,UAAR,CAAkBC,MAAO,GAAIC,MAAO,OAAQ,kBAAC,IAAOC,MAAR,CAAcC,GAAI,MAJlE,2BAMI,kBAAC,IAAOJ,UAAR,CAAkBC,MAAO,GAAIC,MAAO,OAAQ,kBAAC,IAAOC,MAAR,CAAcC,GAAI,MANlE,iDAQI,kBAAC,IAAOJ,UAAR,CAAkBC,MAAO,GAAIC,MAAO,OAAQ,kBAAC,IAAOC,MAAR,CAAcC,GAAI,MARlE,4D,yCCJCC,EAAM,SAACC,GAEhB,IAAMC,EAAc,SAACC,GAAD,OAAgB,kBAAC,IAAD,CAAUC,UAAS,mBAAcD,EAAKE,KAAnB,aAA+B,OAAJF,QAAI,IAAJA,OAAA,EAAAA,EAAMG,OAAQH,EAAKG,MAAQ,IAAMC,IAAKJ,EAAKK,QACvHC,EAAkBC,iBAAO,MAHwD,EAIzDC,oBAAS,GAJgD,mBAIhFC,EAJgF,KAIvEC,EAJuE,KAKnFC,qBAAU,WACVD,GAAW,GACK,uCAAG,8BAAAE,EAAA,+EAE4B,MAAO,YAAyBd,EAAMM,IAAtC,YAA6CN,EAAMe,KAAnD,SAF5B,gBAEMC,EAFN,EAEHC,QACRT,EAAgBU,QAAUF,EAHf,sDAKXG,QAAQC,MAAR,MALW,8BAQXR,GAAW,GARA,4EAAH,oDAWhBS,KACG,CAACrB,EAAMe,KAAMf,EAAMM,MAnB6D,IAoBlEgB,EAAiBd,EAA1BU,QACR,OAAQP,GAAWH,EAAgBU,QAAU,kBAACjB,EAAD,CAAaG,KAAMJ,EAAMI,KAAMG,KAAMe,EAAcjB,MAAOL,EAAMuB,SAAY,MCXhHC,MATjB,WAEI,OACI,6BAASrB,UAAU,kBACf,kBAAC,EAAD,CAAKoB,OAAO,WAAWjB,IAAI,UAAUS,KAAK,SAC1C,kBAAC,EAAD,QCaMU,EAnBH,WAEX,OACI,yBAAKxC,GAAG,WAAWkB,UAAU,4BACzB,kBAAC,IAAD,CAAMuB,GAAG,KACL,wBAAIvB,UAAU,cAAd,IACK,uCADL,IAEK,4CAIT,wBAAIA,UAAU,iBACV,kBAAC,IAAD,CAASuB,GAAG,gBAAgBC,gBAAgB,YAAW,wBAAIxB,UAAU,cAAd,oBACvD,kBAAC,IAAD,CAASuB,GAAG,WAAWC,gBAAgB,YAAW,wBAAIxB,UAAU,cAAd,YAClD,wBAAIA,UAAU,cAAa,uBAAGyB,KAAK,oCAAR,e,OCFzBC,EAZF,WACZ,OACI,yBAAK1B,UAAU,2BACX,wBAAIA,UAAU,YAAd,oCADJ,IAEI,wBAAIA,UAAU,4BACV,4BAAI,uBAAGA,UAAU,WAAW2B,OAAO,QAAQF,KAAK,+CAA8C,kBAAC,EAAD,CAAKxB,KAAK,KAAIE,IAAI,UAAUS,KAAK,eAC/H,4BAAI,uBAAGZ,UAAU,WAAW2B,OAAO,QAAQF,KAAK,+BAA8B,kBAAC,EAAD,CAAKxB,KAAK,KAAIE,IAAI,UAAUS,KAAK,cAC/G,4BAAI,uBAAGZ,UAAU,WAAW2B,OAAO,QAAQF,KAAK,+BAA8B,kBAAC,EAAD,CAAKxB,KAAK,KAAIE,IAAI,UAAUS,KAAK,aAC/G,4BAAI,uBAAGZ,UAAU,WAAW2B,OAAO,QAAQF,KAAK,2CAA0C,kBAAC,EAAD,CAAKxB,KAAK,KAAIE,IAAI,UAAUS,KAAK,kBCP9HgB,EAAM,SAACC,GAAD,OACf,yBAAKC,IAAKD,EAAGC,IAAK9B,UAAS,UAAK6B,EAAGT,OAASS,EAAGT,OAAS,GAA7B,aAAqC,OAAFS,QAAE,IAAFA,OAAA,EAAAA,EAAI5B,MAAO4B,EAAG5B,KAAO,IAC/EE,IAAG,UAAK4B,YAAL,mBAAsCF,EAAG1B,IAAzC,YAAgD0B,EAAGjB,MAAnD,OAA0DiB,EAAGG,KAAH,WAAcH,EAAGG,MAAS,OC4B7EC,EA7BG,WAEjB,OACI,6BAASjC,UAAU,yCACf,kBAAC,IAAD,CAAQX,eAAgB,GAAIC,WAAY,GAAxC,uCAGA,6BAASU,UAAU,4BACf,yBAAKA,UAAU,sDACX,kBAAC,EAAD,CAAK8B,IAAI,2BAA2BV,OAAO,6BAA6BnB,KAAK,KACzEE,IAAI,QAAQS,KAAK,WAAWoB,KAAK,QACrC,kBAAC,EAAD,OAEJ,yBAAKhC,UAAU,+CACX,uBAAGA,UAAU,yEAAb,8KAGA,wBAAIA,UAAU,sBACV,wBAAIA,UAAU,2DAAd,4GACA,wBAAIA,UAAU,2DAAd,yGACA,wBAAIA,UAAU,2DAAd,uEACA,wBAAIA,UAAU,2DAAd,+EAEJ,uBAAGA,UAAU,kEAAkE,sDAA/E,2CAAoJ,6BAApJ,6E,QCIFkC,EA9BC,SAACrC,GAEhB,OACI,wBAAIG,UAAU,gBACV,6BAASmC,IAAKtC,EAAMuC,GAAGtD,GAAIkB,UAAS,wBAAqC,cAAlBH,EAAMuC,GAAGJ,KAAuB,SAAW,KAC9F,2BAAOhC,UAAU,SACb,2BAAIH,EAAMuC,GAAGC,KAAKC,KAClB,2BAAIzC,EAAMuC,GAAGC,KAAKE,QAEtB,6BAASvC,UAAU,gBACf,4BAAQA,UAAU,UACd,4BAAKH,EAAMuC,GAAGI,OACd,yBAAKxC,UAAU,YACX,2BAAIH,EAAMuC,GAAGK,SAASC,cAAtB,IAAqC,6BAArC,IAA4C,8BAAO7C,EAAMuC,GAAGK,SAASE,SAG7E,yBAAK3C,UAAU,eACX,4BAAKH,EAAMuC,GAAGQ,aACd,4BACK/C,EAAMuC,GAAGS,QAAQ3E,KAAI,SAAC4E,EAAgBC,GAAjB,OAAmC,wBAAIZ,IAAKY,EAAO/C,UAAU,UAAU8C,QAGrG,gCACKjD,EAAMuC,GAAGY,QAAQ9E,KAAI,SAAC8E,EAAiBD,GAAlB,OAAoC,4BAAQZ,IAAKY,EAAO/C,UAAU,WAAWgD,WCHzGC,EAhBM,WAGpB,OADAC,EAAYC,MAAK,SAACpC,EAASqC,GAAV,OAAmBA,EAAKtE,GAAKiC,EAAQjC,MAElD,6BAASA,GAAG,mBAAmBkB,UAAU,6BACrC,kBAAC,IAAD,CAAQX,eAAgB,GAAIC,WAAY,GAAxC,mCAGA,6BAASU,UAAU,2BACf,wBAAIA,UAAU,wBACTkD,EAAYhF,KAAI,SAAAkE,GAAE,OAAI,kBAAC,EAAD,CAAYD,IAAKC,EAAGtD,GAAIsD,GAAIA,WCOrDiB,EAnBJ,SAACxD,GAEX,IAAMyD,EAAQzD,EAAM0D,MACpB,OACI,6BAASvD,UAAU,SACf,2BAAOA,UAAU,cACb,kBAAC,EAAD,CAAKC,KAAK,KAAKmB,OAAO,aAAajB,IAAI,SAASS,KAAM0C,EAAMvD,QAEhE,yBAAKC,UAAU,WACX,wBAAIA,UAAU,QAAQsD,EAAM1C,MAC5B,yBAAKZ,UAAU,yBACX,2BAAIsD,EAAME,OACTF,EAAMG,UAAY,kBAAC,EAAD,CAAKxD,KAAK,MAAMmB,OAAO,sBAAsBjB,IAAI,KAAKS,KAAK,cAAiB,KAC9F0C,EAAMI,IAAM,kBAAC,EAAD,CAAKzD,KAAK,MAAMmB,OAAO,gBAAgBjB,IAAI,KAAKS,KAAK,QAAW,S,QCW/E+C,EAtBE,WAGlB,OADAC,EAAWT,MAAK,SAACpC,EAASqC,GAAV,OAAmBA,EAAKtE,GAAKiC,EAAQjC,MAEnD,6BAASA,GAAG,SAASkB,UAAU,sEAC3B,kBAAC,IAAD,CAAQX,eAAgB,GAAIC,WAAY,GAAxC,8BAGF,6BAASU,UAAU,aAChB4D,EAAW1F,KAAI,SAAA2F,GAAQ,OACtB,6BAAS1B,IAAK0B,EAAS/E,GAAIkB,UAAU,QACnC,4BAAQA,UAAU,UAChB,4BAAK6D,EAASrB,QAEhB,6BAASxC,UAAU,WAChB6D,EAASC,OAAO5F,KAAI,SAAAoF,GAAK,OAAI,kBAAC,EAAD,CAAOnB,IAAKmB,EAAMxE,GAAIyE,MAAOD,EAAOtD,UAAU,0BCAxE+D,EAfG,WAEjB,OACI,kBAAC,IAAD,CAAMjF,GAAG,eAAekB,UAAU,aAC9B,kBAAC,IAAD,CAASA,UAAU,8DACf,kBAAC,IAAD,CAAKA,UAAU,cAAf,UACA,kBAAC,IAAD,CAAKA,UAAU,cAAf,kBACA,kBAAC,IAAD,CAAKA,UAAU,cAAf,mBAEJ,kBAAC,IAAD,SAAW,kBAAC,EAAD,MAAX,KACA,kBAAC,IAAD,SAAW,kBAAC,EAAD,MAAX,KACA,kBAAC,IAAD,SAAW,kBAAC,EAAD,MAAX,O,gBCDMgE,EAdH,SAACnE,GAAgB,IAAD,QAE3B,OACI,6BAASG,UAAU,iBACf,yBAAKA,UAAU,UACX,4BAAQwC,MAAK,UAAE3C,EAAMoE,gBAAR,aAAE,EAAgBrD,KAAMuB,IAAG,OAAEtC,QAAF,IAAEA,OAAF,EAAEA,EAAOM,IAAKA,IAAG,kDAAmCN,EAAMoE,gBAAzC,aAAmC,EAAgB9D,QAEhH,yBAAKH,UAAU,SACX,wBAAIA,UAAU,cAAd,UAA4BH,EAAMoE,gBAAlC,aAA4B,EAAgBrD,MAC5C,qCAAIf,EAAMoE,gBAAV,aAAI,EAAgBrB,gBCelBsB,EApBH,WAEX,IAAMC,EAAI,YAAOC,GAFA,EAGe7D,mBAAS4D,EAAK,IAH7B,mBAGVF,EAHU,KAGAI,EAHA,KAKjB,OACI,6BAASrE,UAAU,6BACf,kBAAC,EAAD,CAAQiE,SAAUA,IACd,6BAASjE,UAAU,QACbmE,EAAKjG,KAAI,SAACoG,EAAOvB,GAAR,OACP,6BAASZ,IAAKY,EAAO/C,UAAU,gBAAgBuE,QAAS,kBAAMF,EAAYF,EAAKpB,MAC3E,yBAAK/C,UAAU,SACX,kBAAC,EAAD,CAAKG,IAAI,sBAAsBS,KAAM0D,EAAME,MAAO1C,IAAKwC,EAAM1D,QAEjE,wBAAIZ,UAAU,cAAcsE,EAAM1D,aCT5C6D,EARC,SAAC5E,GAEhB,MAAuB,cAAnBA,EAAMgE,SACC,kBAAC,EAAD,MAEC,+BCyBEa,EA5BI,WAelB,OAHAhE,qBAAU,kBACNiE,SAASC,iBAAiB,YAAYC,SAAQ,SAAAC,GAAO,OAJlC,SAACA,GAAD,uBACnBA,EAAQC,cAAc,iBADH,aACnB,EAAiCC,iBAAiB,QANhC,SAACF,GAAD,OAAsB,WAAO,IAAD,EAC9CA,EAAQG,UAAUC,IAAI,QACtB,UAAAJ,EAAQC,cAAc,iBAAtB,SAAiCC,iBAAiB,SAAS,kBAAMF,EAAQG,UAAUE,OAAO,YAI/BC,CAAcN,IAGhBO,CAAeP,SAGxE,6BAAShG,GAAG,QAAQkB,UAAU,aAdV,CAAC,YAAU,YAAa,SAAU,cAehC9B,KAAK,SAAC2F,EAAUd,GAAX,OAAqB,6BAASZ,IAAKY,EAAO/C,UAAU,WACvE,gCACI,kBAAC,IAAD,CAAQX,eAAgB,GAAIC,WAAYyD,GAAQc,IAEpD,6BAAS7D,UAAU,WACf,kBAAC,EAAD,CAAKG,IAAI,KAAKS,KAAK,QAAQX,KAAK,KAAKmB,OAAO,qBAC5C,kBAAC,EAAD,CAAYyC,SAAUA,WCLxByB,EAhBN,WAEV,OACE,kBAAC,IAAD,CAAQC,SAAS,aACf,0BAAMzG,GAAG,OACP,kBAAC,EAAD,MACA,6BAASkB,UAAU,2BACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOwF,OAAK,EAACC,KAAK,IAAIC,UAAWrE,IACjC,kBAAC,IAAD,CAAOoE,KAAK,gBAAgBC,UAAW3B,IACvC,kBAAC,IAAD,CAAO0B,KAAK,WAAWC,UAAWhB,SCL1BiB,QACW,cAA7BC,OAAOnD,SAASoD,UAEe,UAA7BD,OAAOnD,SAASoD,UAEhBD,OAAOnD,SAASoD,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFtB,SAASuB,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5H,MAAK,SAAA6H,GACJA,EAAaC,gBAEdC,OAAM,SAAAvF,GACLD,QAAQC,MAAMA,EAAMwF,c","file":"static/js/main.56fcc93a.chunk.js","sourcesContent":["var map = {\n\t\"./skills/adobe.svg\": [\n\t\t46,\n\t\t3\n\t],\n\t\"./skills/agilite.svg\": [\n\t\t47,\n\t\t4\n\t],\n\t\"./skills/algos.svg\": [\n\t\t48,\n\t\t5\n\t],\n\t\"./skills/anglais.svg\": [\n\t\t49,\n\t\t6\n\t],\n\t\"./skills/angular.svg\": [\n\t\t50,\n\t\t7\n\t],\n\t\"./skills/database.svg\": [\n\t\t51,\n\t\t8\n\t],\n\t\"./skills/gestion.svg\": [\n\t\t52,\n\t\t9\n\t],\n\t\"./skills/github.svg\": [\n\t\t53,\n\t\t10\n\t],\n\t\"./skills/graphic.svg\": [\n\t\t54,\n\t\t11\n\t],\n\t\"./skills/hibernate.svg\": [\n\t\t55,\n\t\t12\n\t],\n\t\"./skills/html.svg\": [\n\t\t56,\n\t\t13\n\t],\n\t\"./skills/java.svg\": [\n\t\t57,\n\t\t14\n\t],\n\t\"./skills/javascript.svg\": [\n\t\t58,\n\t\t15\n\t],\n\t\"./skills/motion.svg\": [\n\t\t59,\n\t\t16\n\t],\n\t\"./skills/nodejs.svg\": [\n\t\t60,\n\t\t17\n\t],\n\t\"./skills/npm.svg\": [\n\t\t61,\n\t\t18\n\t],\n\t\"./skills/react.svg\": [\n\t\t62,\n\t\t19\n\t],\n\t\"./skills/rest.svg\": [\n\t\t63,\n\t\t20\n\t],\n\t\"./skills/schema.svg\": [\n\t\t64,\n\t\t21\n\t],\n\t\"./skills/security.svg\": [\n\t\t65,\n\t\t22\n\t],\n\t\"./skills/server.svg\": [\n\t\t66,\n\t\t23\n\t],\n\t\"./skills/springboot.svg\": [\n\t\t67,\n\t\t24\n\t],\n\t\"./skills/users.svg\": [\n\t\t68,\n\t\t25\n\t],\n\t\"./skills/wireframe.svg\": [\n\t\t69,\n\t\t26\n\t],\n\t\"./socials/codepen.svg\": [\n\t\t70,\n\t\t27\n\t],\n\t\"./socials/codewars.svg\": [\n\t\t71,\n\t\t28\n\t],\n\t\"./socials/github.svg\": [\n\t\t72,\n\t\t29\n\t],\n\t\"./socials/linkedin.svg\": [\n\t\t73,\n\t\t30\n\t],\n\t\"./socials/logo.svg\": [\n\t\t74,\n\t\t31\n\t],\n\t\"./socials/twitter.svg\": [\n\t\t75,\n\t\t32\n\t],\n\t\"./ui/certified.svg\": [\n\t\t76,\n\t\t33\n\t],\n\t\"./ui/close.svg\": [\n\t\t77,\n\t\t34\n\t],\n\t\"./ui/pro.svg\": [\n\t\t78,\n\t\t35\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 41;\nmodule.exports = webpackAsyncContext;","import React from 'react';\nimport Typist from 'react-typist';\n\nconst IntroWriter = () => {\n\n    return (\n        <h1 id='intro-typer'>\n            <Typist avgTypingDelay={75} startDelay={0}>\n                Bienvenue !\n                <Typist.Backspace count={28} delay={1250} /><Typist.Delay ms={200} />\n                Je suis un UI / UX Designer\n                <Typist.Backspace count={16} delay={1250} /><Typist.Delay ms={200} />\n                concepteur d'application\n                <Typist.Backspace count={24} delay={1250} /><Typist.Delay ms={200} />\n                Développeur web fullstack Javascript & JAVA\n                <Typist.Backspace count={46} delay={1250} /><Typist.Delay ms={200} />\n                disponible pour échanger sur vos projets et besoins\n            </Typist>\n        </h1>\n    );\n\n}; export default IntroWriter;","import React, { useState, useEffect, useRef } from 'react';\nimport { ReactSVG } from 'react-svg';\n\nexport const Svg = (props: {src: string, name: string, styles?: string, size?: string}) => {\n\n    const IconWrapper = (icon: any) => (<ReactSVG className={`icon-svg ${icon.size} ${icon?.extra ? icon.extra : ''}`} src={icon.file} />);\n    const ImportedIconRef = useRef(null);\n    const [loading, setLoading] = useState(false);\n        useEffect(() => {\n        setLoading(true);\n        const importIcon = async () => {\n            try {\n                const { default: namedImport } = await import(`../../../assets/icons/${props.src}/${props.name}.svg`);\n                ImportedIconRef.current = namedImport;\n            } catch (err) {\n                console.error(err);\n                throw err;\n            } finally {\n                setLoading(false);\n            }\n        };\n        importIcon();\n        }, [props.name, props.src]);\n        const { current: ImportedIcon } = ImportedIconRef;\n        return !loading && ImportedIconRef.current ? <IconWrapper size={props.size} file={ImportedIcon} extra={props.styles} />: null;\n\n};","import React from 'react';\nimport IntroWriter from './IntroWriter';\nimport {Svg} from '../../shared/Svg';\n\nfunction Home() {\n\n    return (\n        <section className='container cols'>\n            <Svg styles=\"app-logo\" src='socials' name='logo'/>\n            <IntroWriter />\n        </section>\n    );\n\n} export default Home;","import React from 'react';\nimport { NavLink, Link } from 'react-router-dom';\n\nconst Header = () => {\n\n    return (\n        <nav id='main-nav' className=\"is-flex between shadowed\">\n            <Link to='/'>\n                <h3 className='is-primary'>\n                    L<span>ouis </span>\n                    G<span>ODLEWSKI</span>\n                </h3>\n            </Link>\n\n            <ul className='links is-flex'>\n                <NavLink to='/presentation' activeClassName=\"selected\"><li className='is-primary'>Présentation</li></NavLink>\n                <NavLink to='/projets' activeClassName=\"selected\"><li className='is-primary'>Projets</li></NavLink>\n                <li className='is-primary'><a href=\"mailto:louis.godlewski@gmail.com\">Contact</a></li>\n            </ul>\n        </nav>\n    );\n\n}; export default Header;","import React from 'react';\nimport {Svg} from '../../../shared/Svg';\n\nconst Socials = () => {\n    return (\n        <div className='socials is-white spaced'>\n            <em className='centered'>Retrouvez moi sur les réseaux</em>:\n            <ul className='is-flex evenly fullwidth'>\n                <li><a className='is-white' target='blank' href=\"https://www.linkedin.com/in/louis-godlewski\"><Svg size='xs'src='socials' name='linkedin' /></a></li>\n                <li><a className='is-white' target='blank' href=\"https://codepen.io/louiiuol\"><Svg size='xs'src='socials' name='codepen' /></a></li>\n                <li><a className='is-white' target='blank' href=\"https://github.com/louiiuol\"><Svg size='xs'src='socials' name='github' /></a></li>\n                <li><a className='is-white' target='blank' href=\"https://www.codewars.com/users/louiiuol\"><Svg size='xs'src='socials' name='codewars' /></a></li>\n            </ul>\n        </div>\n    );\n}; export default Socials;","import React from 'react';\n\ninterface ImgInputs { src: string, name: string, type?: string, alt: string, styles?: string, size?: string }\n\nexport const Img = (el: ImgInputs) =>\n    <img alt={el.alt} className={`${el.styles ? el.styles : ''} ${el?.size ? el.size : ''}`}\n        src={`${process.env.PUBLIC_URL}/images/${el.src}/${el.name}${el.type ? `.${el.type}` : ''}`} />","import React from 'react';\nimport Typist from 'react-typist';\nimport Socials from './Socials';\nimport { Img } from '../../../shared/Img';\n\nconst Introduction = () => {\n\n    return (\n        <section className=\"container cols start tabs no-overflow\">\n            <Typist avgTypingDelay={50} startDelay={0}>\n                Développeur Fullstack Javascript\n            </Typist>\n            <section className=\"container evenly reverse\">\n                <div className=\"is-flex cols animate__animated animate__zoomInDown\">\n                    <Img alt=\"Louis Godlewski's avatar\" styles='shadowed rounded colorless' size='lg'\n                        src='intro' name='portrait' type='png'/>\n                    <Socials />\n                </div>\n                <div className=\"is-white spaced-lg halfwidth-md no-overflow\">\n                    <p className='animate__animated animate__flipInX animate__delay-1s legend spaced-xs'>\n                        Passionné d'UX design et de structure de données, je suis un développeur web capable de contribuer à l'ensemble des étapes de construction d'un projet web.\n                    </p>\n                    <ul className='list circle bolded'>\n                        <li className='animate__animated animate__fadeInLeft animate__delay-2s'>Création de composants graphiques comportant une logique d'affichage dédiée et réutilisable.</li>\n                        <li className='animate__animated animate__fadeInLeft animate__delay-2s'>Implémentation d'algorithmes et de services persistant la logique métier en base de données.</li>\n                        <li className='animate__animated animate__fadeInLeft animate__delay-2s'>Vérification du code via des tests d'intégration ou unitaire.</li>\n                        <li className='animate__animated animate__fadeInLeft animate__delay-2s'>Déploiement en continue des fonctionnalités via Github, Jenkins, AWS</li>\n                    </ul>\n                    <p className='animate__animated animate__flipInX animate__delay-3s spaced-xs' ><strong>Poste recherché</strong>: développeur full stack Javascript. <br />Si mon profil vous intéresse, n'hésitez pas à me contacter !</p>\n                </div>\n            </section>\n        </section>\n    );\n\n}; export default Introduction;","import React from 'react';\n\nconst Experience = (props: any) => {\n\n    return (\n        <li className=\"card-wrapper\">\n            <article key={props.xp.id} className={`card shadowed ${props.xp.type === 'FORMATION' ? 'accent' : ''}`}>\n                <aside className=\"aside\">\n                    <p>{props.xp.date.end}</p>\n                    <p>{props.xp.date.start}</p>\n                </aside>\n                <section className=\"card-content\">\n                    <header className=\"header\">\n                        <h5>{props.xp.title}</h5>\n                        <div className=\"location\">\n                            <p>{props.xp.location.establishment} <br /> <span>{props.xp.location.city}</span></p>\n                        </div>\n                    </header>\n                    <div className=\"description\">\n                        <em>{props.xp.description}</em>\n                        <ul>\n                            {props.xp.actions.map((action: string, index: number) => <li key={index} className='action'>{action}</li>)}\n                        </ul>\n                    </div>\n                    <footer>\n                        {props.xp.keyword.map((keyword: string, index: string) => <strong key={index} className='keyword'>{keyword}</strong>)}\n                    </footer>\n                </section>\n            </article>\n        </li>\n    );\n\n}; export default Experience;","import React from 'react';\n\nimport experiences from '../../../../../assets/json/experiences.json';\nimport Typist from 'react-typist';\nimport Experience from './experience';\n\nconst ExperienceTable = () => {\n\n    experiences.sort((current, next) => next.id - current.id);\n    return (\n        <section id='experience-table' className='container cols start tabs'>\n            <Typist avgTypingDelay={50} startDelay={0}>\n                Expériences professionnelles\n            </Typist>\n            <section className=\"container table-wrapper\">\n                <ul className='container cols start'>\n                    {experiences.map(xp => <Experience key={xp.id} xp={xp}/> )}\n                </ul>\n            </section>\n        </section>\n    );\n\n}; export default ExperienceTable;\n","import React from 'react';\nimport { Svg } from '../../../shared/Svg';\n\n\nconst Skill = (props: any) => {\n\n    const skill = props.value;\n    return (\n        <section className=\"skill\">\n            <aside className='is-primary'>\n                <Svg size='xs' styles='skill-icon' src='skills' name={skill.icon} />\n            </aside>\n            <div className=\"content\">\n                <h3 className=\"name\">{skill.name}</h3>\n                <div className=\"infos container start\">\n                    <p>{skill.level}</p>\n                    {skill.certified ? <Svg size='xxs' styles='graduated hoverable' src='ui' name='certified' /> : null}\n                    {skill.pro ? <Svg size='xxs' styles='pro hoverable' src='ui' name='pro' /> : null}\n                </div>\n            </div>\n        </section>\n    );\n\n}; export default Skill;","import React from 'react';\nimport Typist from 'react-typist';\nimport Skill from './Skill';\n\nimport categories from '../../../../../assets/json/skills.json';\n\nconst SkillsBoard = () => {\n\n  categories.sort((current, next) => next.id - current.id);\n  return (\n    <section id='skills' className=\"container cols start tabs animate__animated animate__bounceInRight\">\n        <Typist avgTypingDelay={50} startDelay={0}>\n          Domaines de compétences\n        </Typist>\n      <section className=\"card-list\">\n        {categories.map(category =>\n          <article key={category.id} className='card'>\n            <header className=\"header\">\n              <h2>{category.title}</h2>\n            </header>\n            <section className=\"content\">\n              {category.skills.map(skill => <Skill key={skill.id} value={skill} className=\"card-skill\"></Skill>)}\n            </section>\n          </article>)}\n      </section>\n    </section>\n  );\n\n}; export default SkillsBoard;\n","import React from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport Introduction from './introduction/Introduction';\nimport ExperienceTable from './experience/ExperienceTable';\nimport SkillsBoard from './skills/SkillsBoard';\n\nconst Presentation = () => {\n\n    return (\n        <Tabs id='presentation' className='container'>\n            <TabList className='react-tabs__tab-list animate__animated animate__fadeInDown'>\n                <Tab className='is-primary'>Profil</Tab>\n                <Tab className='is-primary'>Expériences</Tab>\n                <Tab className='is-primary'>Compétences</Tab>\n            </TabList>\n            <TabPanel> <Introduction /> </TabPanel>\n            <TabPanel> <ExperienceTable /> </TabPanel>\n            <TabPanel> <SkillsBoard /> </TabPanel>\n        </Tabs>\n    );\n\n}; export default Presentation;","import React from 'react';\n\nconst Player = (props: any) => {\n\n    return (\n        <section className=\"video-details\">\n            <div className=\"screen\">\n                <iframe title={props.selected?.name} key={props?.src} src={`https://www.youtube.com/embed/${props.selected?.src}`}></iframe>\n            </div>\n            <div className=\"infos\">\n                <h3 className='is-primary'>{props.selected?.name}</h3>\n                <p>{props.selected?.description}</p>\n            </div>\n        </section>\n    );\n\n}; export default Player;","import React, { useState } from 'react';\n\nimport videos from '../../../../assets/json/works/videos.json';\nimport Player from './Player';\nimport { Img } from '../../shared';\n\nconst Videos = () => {\n\n    const feed = [...videos];\n    const [selected, setSelected] = useState(feed[0]);\n\n    return (\n        <section className='videos-container fullsize'>\n            <Player selected={selected} />\n                <section className=\"next\">\n                    { feed.map((video, index) =>\n                        <article key={index} className=\"video-preview\" onClick={() => setSelected(feed[index])}>\n                            <div className=\"cover\">\n                                <Img src='works/videos-covers' name={video.cover} alt={video.name}/>\n                            </div>\n                            <h4 className='is-primary'>{video.name}</h4>\n                        </article> )}\n                </section>\n        </section>\n    );\n\n}; export default Videos;","import React from 'react';\nimport Videos from './Videos';\n\nconst WorkDetail = (props: {category:string}) => {\n\n    if (props.category === \"Vidéos\") {\n        return <Videos />\n    } else {\n        return (<div></div>);\n    }\n\n}; export default WorkDetail;","import React, { useEffect } from 'react';\nimport Typist from 'react-typist';\nimport WorkDetail from './WorkDetail';\nimport {Svg} from '../../shared';\n\nconst WorksPlatform = () => {\n\n    const worksCategories = ['Vidéos', 'Graphsime', 'Web-UI', 'Algorithme'];\n\n    const setFullScreen = (quarter: Element) => () => {\n        quarter.classList.add('full');\n        quarter.querySelector('.close')?.addEventListener('click', () => quarter.classList.remove('full'));\n    }\n\n    const toggleQuarters = (quarter: Element) =>\n        quarter.querySelector('header')?.addEventListener('click', setFullScreen(quarter))\n\n    useEffect(() =>\n        document.querySelectorAll('.quarter').forEach(quarter => toggleQuarters(quarter)))\n\n    return (\n        <section id='works' className=\"container\">\n            { worksCategories.map( (category, index) => <article key={index} className=\"quarter\">\n                <header>\n                    <Typist avgTypingDelay={50} startDelay={index}>{category}</Typist>\n                </header>\n                <section className=\"content\">\n                    <Svg src='ui' name='close' size='xs' styles='close is-primary' />\n                    <WorkDetail category={category} />\n                </section>\n            </article> )}\n        </section> );\n\n}; export default WorksPlatform;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './components/views/home/Home';\nimport Header from './components/shared/Header';\nimport Presentation from './components/views/presentation/Presentation';\nimport WorksPlatform from './components/views/works/WorksPlatform';\n\nconst App = () => {\n\n  return (\n    <Router basename=\"/louiiuol\">\n      <main id=\"app\">\n        <Header />\n        <section className=\"global-container flexed\">\n          <Switch>\n            <Route exact path='/' component={Home}></Route>\n            <Route path='/presentation' component={Presentation}></Route>\n            <Route path='/projets' component={WorksPlatform}></Route>\n          </Switch>\n        </section>\n      </main>\n    </Router>);\n\n}; export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/styles/index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}